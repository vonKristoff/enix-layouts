{"version":3,"sources":["components/navigation.js","components/content-tile.js","components/page-content-collection.js","components/lightbox.js","App.js","serviceWorker.js","index.js"],"names":["Component","react_default","a","createElement","className","setLayoutClassName","row","concat","backgroundImageFromModel","src","backgroundImage","_ref","model","triggerLightbox","onClick","e","style","artwork","title","content","dispatchLayout","desktopLandscape","collection","map","item","index","getRowFromFormation","desktopPortrait","tabletLandscape","tabletPortrait","mobileLandscape","mobilePortrait","formation","type","setLightbox","viewport","layout","_ref2","string","device","mediaQuery","charAt","toUpperCase","slice","layoutReducer","content_tile","key","id","state","active","closeLightbox","undefined","ENDPOINT","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","Axios","get","then","response","setState","data","loaded","catch","console","log","window","addEventListener","handleResize","toggleLightbox","arguments","length","focus","mq","getOrientation","getMediaType","innerWidth","innerHeight","width","render","navigation","page_content_collection","lightbox","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6LAMeA,EALG,kBACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,sBCOFE,EAAqB,SAAAC,GAAG,sBAAAC,OAAoBD,IAC5CE,EAA2B,SAAAC,GAChC,MAAO,CACNC,gBAAe,OAAAH,OAASE,EAAT,OAGFT,EAfG,SAAAW,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,gBAAV,OACdZ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,EAAmBO,EAAMN,KAAMQ,QAAS,SAAAC,GAAC,OAAIF,EAAgBD,KAC5EX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBY,MAAOR,EAAyBI,EAAMK,WACvEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAKS,EAAMM,OACXjB,EAAAC,EAAAC,cAAA,SAAIS,EAAMO,YCenB,IAAMC,EAAiB,CACtBC,iBADsB,SACLC,GAChB,OAAOA,EAAWC,IAAI,SAACC,EAAMC,GAE5B,OADAD,EAAKlB,IAAMoB,EAAoB,UAAWD,GACnCD,KAGTG,gBAPsB,SAONL,GACf,OAAOA,EAAWC,IAAI,SAACC,EAAMC,GAE5B,OADAD,EAAKlB,IAAMoB,EAAoB,UAAWD,GACnCD,KAGTI,gBAbsB,SAaNN,GACf,OAAOA,EAAWC,IAAI,SAACC,EAAMC,GAE5B,OADAD,EAAKlB,IAAMoB,EAAoB,UAAWD,GACnCD,KAGTK,eAnBsB,SAmBPP,GACd,OAAOA,EAAWC,IAAI,SAACC,EAAMC,GAE5B,OADAD,EAAKlB,IAAMoB,EAAoB,UAAWD,GACnCD,KAGTM,gBAzBsB,SAyBNR,GACf,OAAOA,EAAWC,IAAI,SAACC,EAAMC,GAE5B,OADAD,EAAKlB,IAAMoB,EAAoB,MAAOD,GAC/BD,KAGTO,eA/BsB,SA+BPT,GACd,OAAOA,EAAWC,IAAI,SAACC,EAAMC,GAE5B,OADAD,EAAKlB,IAAMoB,EAAoB,MAAOD,GAC/BD,MAMV,SAASE,EAAoBM,EAAWP,GACvC,OAAOO,GACN,IAAK,UACJ,OAAiB,IAAVP,EAAiB,kBACZ,IAAVA,EAAkB,mBAClBA,EAAQ,GAAKA,GAAS,EAAK,WAC3BA,EAAQ,GAAKA,GAAS,EAAK,WAC3B,WACH,IAAK,UACJ,OAAiB,IAAVA,EAAiB,WACtBA,EAAQ,GAAKA,GAAS,EAAK,WAC3BA,EAAQ,GAAKA,GAAS,EAAK,WAC3B,WACH,IAAK,UACJ,OAAiB,IAAVA,EAAiB,WACtBA,EAAQ,GAAKA,GAAS,EAAK,WAC3BA,EAAQ,GAAKA,GAAS,GAAM,WAC5B,WACH,IAAK,MACJ,OAAOA,GAAS,EAAO,WACrB,WACH,QACC,OAAiB,IAAVA,EAAiB,WACtBA,EAAQ,GAAKA,GAAS,EAAK,WAC3BA,EAAQ,GAAKA,GAAS,EAAK,WAC3BA,EAAQ,GAAKA,GAAS,EAAK,WAC3B,YAUUzB,MA3FG,SAAAW,GAAA,IAoFWsB,EApFRX,EAAHX,EAAGW,WAAYY,EAAfvB,EAAeuB,YAAaC,EAA5BxB,EAA4BwB,SAA5B,OACjBlC,EAAAC,EAAAC,cAAA,OAAKC,WAmFuB6B,EAnFQE,EAASC,OAoF7C,mCAAA7B,OAA0C0B,KA3E3C,SAAAI,GAA2C,IA6EZC,EA7ENC,EAAkBF,EAAlBE,OAAQH,EAAUC,EAAVD,OAC5BI,EAAU,GAAAjC,OAAMgC,GAANhC,QA4EgB+B,EA5EqBF,GA6ElCK,OAAO,GAAGC,cAAgBJ,EAAOK,MAAM,IA5ExD,OAAO,SAAArB,GAAU,OAAIF,EAAeoB,GAAYlB,IAV9CsB,CAAcT,EAAdS,CAAwBtB,GAAYC,IAAI,SAAAC,GAAI,OAAIvB,EAAAC,EAAAC,cAAC0C,EAAD,CAAaC,IAAKtB,EAAKuB,GAAInC,MAAOY,EAAMX,gBAAiBqB,QCW7FlC,MAlBG,SAAAW,GAAA,IAUgBF,EAKhBuC,EAfGC,EAAHtC,EAAGsC,OAAQrC,EAAXD,EAAWC,MAAOsC,EAAlBvC,EAAkBuC,cAAlB,OACdjD,EAAAC,EAAAC,cAAA,OAAKC,WAcS4C,EAdWC,EAelBD,EAAQ,+BAAiC,sBAfdlC,QAAS,SAAAC,GAAC,OAAImC,MAC5CjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYY,OAOLP,EAPqCG,EAAMK,QAQlE,CACHP,qBAAyByC,IAAR1C,EAAA,OAAAF,OAA2BE,EAA3B,KAAoC,WARjDR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,YAAOS,EAAMmC,GAAb,IAAkBnC,EAAMM,2BCAlCkC,EAAW,qCAwDFC,kBArDX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAcJI,kBAAoB,WAChBC,IAAMC,IAAIX,GAAUY,KAAK,SAAAC,GACrBX,EAAKY,SAAS,CAAE5C,WAAY2C,EAASE,KAAMC,QAAQ,MACpDC,MAAMC,QAAQC,KACjBC,OAAOC,iBAAiB,SAAUnB,EAAKoB,eAnB7BpB,EAqBdqB,eAAiB,WAAmB,IAAlB/D,EAAkBgE,UAAAC,OAAA,QAAA1B,IAAAyB,UAAA,IAAAA,UAAA,GAC5B5B,IAAQpC,EACZ0C,EAAKY,SAAS,CAAEY,MAAO,CAAE7B,OAAQD,EAAOpC,YAvB9B0C,EAyBdoB,aAAe,WACX,IAAIK,EAAKzB,EAAKN,MAAMR,WAChBJ,EAASkB,EAAK0B,iBACdzC,EAASe,EAAK2B,eACfF,EAAG3C,SAAWA,GAAU2C,EAAGxC,SAAWA,GAAQe,EAAKY,SAAS,CAAE1B,WAAY,CAAEJ,SAAQG,aA7B7Ee,EA+Bd0B,eAAiB,WACb,OAASR,OAAOU,WAAaV,OAAOW,YAAe,EAAK,YAAc,YAhC5D7B,EAkCd2B,aAAe,WACX,IAAIG,EAAQZ,OAAOU,WAInB,OAHWE,EAAQ,KAAO,UACxBA,EAAQ,MAAQA,GAAS,IAAM,SAC/B,UAtCQ9B,EAyCd+B,OAAS,kBACLpF,EAAAC,EAAAC,cAAA,OAAKC,WAQc4C,EAReM,EAAKN,MAAM8B,MAAM7B,OAShDD,EAAQ,mBAAqB,QAR5B/C,EAAAC,EAAAC,cAACmF,EAAD,MACChC,EAAKN,MAAMoB,QAAUnE,EAAAC,EAAAC,cAACoF,EAAD,CAAuBpD,SAAUmB,EAAKN,MAAMR,WAAYlB,WAAYgC,EAAKN,MAAM1B,WAAYY,YAAaoB,EAAKqB,iBACnI1E,EAAAC,EAAAC,cAACqF,EAAD,CAAUvC,OAAQK,EAAKN,MAAM8B,MAAM7B,OAAQrC,MAAO0C,EAAKN,MAAM8B,MAAMlE,MAAOsC,cAAeI,EAAKqB,kBAK1G,IAA2B3B,GAhDnBM,EAAKN,MAAQ,CACToB,QAAQ,EACR9C,WAAY,GACZwD,MAAO,CACH7B,QAAQ,EACRrC,MAAO,IAEX4B,WAAY,CACRJ,OAAQkB,EAAK0B,iBACbzC,OAAQe,EAAK2B,iBAXX3B,6BADAtD,aCIEyF,QACW,cAA7BjB,OAAOkB,SAASC,UAEe,UAA7BnB,OAAOkB,SAASC,UAEhBnB,OAAOkB,SAASC,SAASC,MACvB,2DCZNC,IAASR,OAAOpF,EAAAC,EAAAC,cAAC2F,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnC,KAAK,SAAAoC,GACjCA,EAAaC","file":"static/js/main.e432e49e.chunk.js","sourcesContent":["import React from 'react'\nconst Component = () => (\n    <div className=\"navigation\">\n        <span>Logo</span>\n    </div>\n)\nexport default Component","import React from 'react'\nconst Component = ({ model, triggerLightbox }) => (\n    <div className={setLayoutClassName(model.row)} onClick={e => triggerLightbox(model)}>\n    \t<div className=\"tile-background\" style={backgroundImageFromModel(model.artwork)}></div>\n    \t<div className=\"tile-meta\">\n\t        <h3>{model.title}</h3>\n\t        <p>{model.content}</p>\n       </div>\n    </div>\n)\nconst setLayoutClassName = row => `content-tile ${row}`\nconst backgroundImageFromModel = src => { \n\treturn {\n\t\tbackgroundImage: `url(${src})`\n\t}\n}\nexport default Component","import React from 'react'\nimport ContentTile from './content-tile'\n\n// wraps all the collection items\n// styles them using classes (see frontend/src/stylus/page-layouts.styl) based on the mediaQuery passed in as a prop\n\nconst Component = ({ collection, setLightbox, viewport }) => (\n\t<div className={setOrientationClass(viewport.layout)}>\n\t\t{layoutReducer(viewport)(collection).map(item => <ContentTile key={item.id} model={item} triggerLightbox={setLightbox}/>)}\n\t</div>\n)\n\n// Private helpers\n// Should probably move these to their own Layout service \n\n// map the collection, adding a new 'row' parameter detailing layout type based upon device & orientatoin\nfunction layoutReducer({ device, layout }) {\n\tlet mediaQuery = `${device}${capitalizeFirstLetter(layout)}` \t// ie: mobileLandscape\t\n\treturn collection => dispatchLayout[mediaQuery](collection)\t\t// finds layout guide for each collection item via the mediaQuery\n}\n// return a new [collection]\nconst dispatchLayout = {\n\tdesktopLandscape(collection) {\n\t\treturn collection.map((item, index) => {\n\t\t\titem.row = getRowFromFormation(\"2-3-4-6\", index)\n\t\t\treturn item\n\t\t})\n\t},\n\tdesktopPortrait(collection) {\n\t\treturn collection.map((item, index) => {\n\t\t\titem.row = getRowFromFormation(\"2-3-4-6\", index)\n\t\t\treturn item\n\t\t})\n\t},\n\ttabletLandscape(collection) {\n\t\treturn collection.map((item, index) => {\n\t\t\titem.row = getRowFromFormation(\"1-3-4-6\", index)\n\t\t\treturn item\n\t\t})\n\t},\n\ttabletPortrait(collection) {\n\t\treturn collection.map((item, index) => {\n\t\t\titem.row = getRowFromFormation(\"1-2-3-6\", index)\n\t\t\treturn item\n\t\t})\n\t},\n\tmobileLandscape(collection) {\n\t\treturn collection.map((item, index) => {\n\t\t\titem.row = getRowFromFormation(\"1-2\", index)\n\t\t\treturn item\n\t\t})\n\t},\n\tmobilePortrait(collection) {\n\t\treturn collection.map((item, index) => {\n\t\t\titem.row = getRowFromFormation(\"1-2\", index)\n\t\t\treturn item\n\t\t})\n\t}\n}\n// helper to isolate specific grid layouts\n// returns a string that denotes the items class which handles the respective widths\nfunction getRowFromFormation(formation, index) {\n\tswitch(formation) {\n\t\tcase \"2-3-4-6\":\n\t\t\treturn index === 0 \t\t\t? \"row-of-2--large\"\n\t\t\t: index === 1 \t\t\t\t? \"row-of-2--medium\"\n\t\t\t: index > 1 && index <= 4 \t? \"row-of-3\"\n\t\t\t: index > 4 && index <= 8 \t? \"row-of-4\"\n\t\t\t: \"row-of-6\"\n\t\tcase \"1-2-3-6\":\n\t\t\treturn index === 0 \t\t\t? \"row-of-1\"\n\t\t\t: index > 0 && index <= 2 \t? \"row-of-2\"\n\t\t\t: index > 2 && index <= 8 \t? \"row-of-3\"\n\t\t\t: \"row-of-6\"\n\t\tcase \"1-3-4-6\":\n\t\t\treturn index === 0 \t\t\t? \"row-of-1\"\n\t\t\t: index > 0 && index <= 6 \t? \"row-of-3\"\n\t\t\t: index > 6 && index <= 10 \t? \"row-of-4\"\n\t\t\t: \"row-of-6\"\n\t\tcase \"1-2\":\n\t\t\treturn index <= 9 \t\t\t? \"row-of-1\"\n\t\t\t: \"row-of-2\"\n\t\tdefault:\n\t\t\treturn index === 0 \t\t\t? \"row-of-1\"\n\t\t\t: index > 0 && index <= 1 \t? \"row-of-2\"\n\t\t\t: index > 1 && index <= 4 \t? \"row-of-3\"\n\t\t\t: index > 4 && index <= 8 \t? \"row-of-4\"\n\t\t\t: \"row-of-6\"\n\t}\n}\nfunction setOrientationClass(type) {\n\treturn `content-collection orientation--${type}` // now superflous\n}\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nexport default Component","import React from 'react'\nconst Component = ({ active, model, closeLightbox }) => (\n    <div className={isActive(active)} onClick={e => closeLightbox()}>\n        <div className=\"lightbox-viewport\">\n            <div className=\"view-body\" style={backgroundImageFromModel(model.artwork)}></div>\n            <div className=\"view-caption\">\n                <span>{model.id} {model.title}</span>\n            </div>\n        </div>\n    </div>\n)\nfunction backgroundImageFromModel(src) {\n    return { \n        backgroundImage: src !== undefined ? `url(${src})` : 'none'\n    }\n}\nfunction isActive(state) {\n    return state ? \"lightbox-component is-active\" : \"lightbox-component\"\n}\nexport default Component","import React, { Component } from 'react';\nimport Navigation from './components/navigation'\nimport PageContentCollection from './components/page-content-collection'\nimport Lightbox from './components/lightbox'\nimport Axios from 'axios/dist/axios'\n\nconst ENDPOINT = \"http://localhost:8080/api/all-data\"\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            loaded: false,                      // async wait for get request\n            collection: [],                     // store for payload\n            focus: {                            // user triggered model to action the Lightbox component\n                active: false,\n                model: {}\n            },\n            mediaQuery: {                       // handle the media queiries bound by the reize listener\n                layout: this.getOrientation(),\n                device: this.getMediaType()\n            }\n        }\n    }\n    componentDidMount = () => {\n        Axios.get(ENDPOINT).then(response => {\n            this.setState({ collection: response.data, loaded: true })\n        }).catch(console.log)\n        window.addEventListener('resize', this.handleResize)        \n    }\n    toggleLightbox = (model = false) => {\n        let state = model ? true : false\n        this.setState({ focus: { active: state, model } })\n    }\n    handleResize = () => {\n        let mq = this.state.mediaQuery\n        let layout = this.getOrientation()\n        let device = this.getMediaType()\n        if(mq.layout !== layout || mq.device !== device) this.setState({ mediaQuery: { layout, device } })\n    }\n    getOrientation = () => {\n        return ((window.innerWidth / window.innerHeight) > 1) ? \"landscape\" : \"portrait\"\n    }\n    getMediaType = () => {\n        let width = window.innerWidth\n        let type = width > 1024 ? \"desktop\"\n        : width < 1024 && width >= 640 ? \"tablet\"\n        : \"mobile\"\n        return type\n    }\n    render = () => (\n        <div className={hasLightboxActive(this.state.focus.active)}>\n            <Navigation />\n            {this.state.loaded && <PageContentCollection viewport={this.state.mediaQuery} collection={this.state.collection} setLightbox={this.toggleLightbox}/>}\n            <Lightbox active={this.state.focus.active} model={this.state.focus.model} closeLightbox={this.toggleLightbox}/>\n        </div>\n    );\n}\n\nfunction hasLightboxActive(state) {\n    return state ? \"App has-lightbox\" : \"App\"\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}